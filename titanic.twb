<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='train' inline='true' name='federated.1gjitae186ocq41cp1cda1ptwu3o' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='train' name='textscan.1aqrx7k0vzy9mm1216tfp0ujdz54'>
            <connection class='textscan' directory='C:/Users/Asus/Desktop/titanic' filename='train.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1aqrx7k0vzy9mm1216tfp0ujdz54' name='train.csv' table='[train#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='PassengerId' ordinal='0' />
            <column datatype='integer' name='Survived' ordinal='1' />
            <column datatype='integer' name='Pclass' ordinal='2' />
            <column datatype='string' name='Name' ordinal='3' />
            <column datatype='string' name='Sex' ordinal='4' />
            <column datatype='real' name='Age' ordinal='5' />
            <column datatype='integer' name='SibSp' ordinal='6' />
            <column datatype='integer' name='Parch' ordinal='7' />
            <column datatype='string' name='Ticket' ordinal='8' />
            <column datatype='real' name='Fare' ordinal='9' />
            <column datatype='string' name='Cabin' ordinal='10' />
            <column datatype='string' name='Embarked' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[train.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PassengerId</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PassengerId]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>PassengerId</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Survived</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Survived]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Survived</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pclass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pclass]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Pclass</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SibSp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SibSp]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>SibSp</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Parch</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Parch]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Parch</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ticket</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ticket]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Ticket</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Fare</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Fare]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Fare</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cabin</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cabin]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Cabin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Embarked</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Embarked]</local-name>
            <parent-name>[train.csv]</parent-name>
            <remote-alias>Embarked</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Age]' peg='0' size='16' />
      </column>
      <column datatype='real' name='[Age]' role='measure' type='quantitative' />
      <column datatype='string' name='[Cabin (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Cabin]' default='&quot;No Cabin &quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Has Cabin&quot;'>
            <value>&quot;A10&quot;</value>
            <value>&quot;A14&quot;</value>
            <value>&quot;A16&quot;</value>
            <value>&quot;A19&quot;</value>
            <value>&quot;A20&quot;</value>
            <value>&quot;A23&quot;</value>
            <value>&quot;A24&quot;</value>
            <value>&quot;A26&quot;</value>
            <value>&quot;A31&quot;</value>
            <value>&quot;A32&quot;</value>
            <value>&quot;A34&quot;</value>
            <value>&quot;A36&quot;</value>
            <value>&quot;A6&quot;</value>
            <value>&quot;A7&quot;</value>
            <value>&quot;B101&quot;</value>
            <value>&quot;B102&quot;</value>
            <value>&quot;B18&quot;</value>
            <value>&quot;B19&quot;</value>
            <value>&quot;B20&quot;</value>
            <value>&quot;B22&quot;</value>
            <value>&quot;B28&quot;</value>
            <value>&quot;B3&quot;</value>
            <value>&quot;B30&quot;</value>
            <value>&quot;B35&quot;</value>
            <value>&quot;B37&quot;</value>
            <value>&quot;B38&quot;</value>
            <value>&quot;B39&quot;</value>
            <value>&quot;B4&quot;</value>
            <value>&quot;B41&quot;</value>
            <value>&quot;B42&quot;</value>
            <value>&quot;B49&quot;</value>
            <value>&quot;B5&quot;</value>
            <value>&quot;B50&quot;</value>
            <value>&quot;B51 B53 B55&quot;</value>
            <value>&quot;B57 B59 B63 B66&quot;</value>
            <value>&quot;B58 B60&quot;</value>
            <value>&quot;B69&quot;</value>
            <value>&quot;B71&quot;</value>
            <value>&quot;B73&quot;</value>
            <value>&quot;B77&quot;</value>
            <value>&quot;B78&quot;</value>
            <value>&quot;B79&quot;</value>
            <value>&quot;B80&quot;</value>
            <value>&quot;B82 B84&quot;</value>
            <value>&quot;B86&quot;</value>
            <value>&quot;B94&quot;</value>
            <value>&quot;B96 B98&quot;</value>
            <value>&quot;C101&quot;</value>
            <value>&quot;C103&quot;</value>
            <value>&quot;C104&quot;</value>
            <value>&quot;C106&quot;</value>
            <value>&quot;C110&quot;</value>
            <value>&quot;C111&quot;</value>
            <value>&quot;C118&quot;</value>
            <value>&quot;C123&quot;</value>
            <value>&quot;C124&quot;</value>
            <value>&quot;C125&quot;</value>
            <value>&quot;C126&quot;</value>
            <value>&quot;C128&quot;</value>
            <value>&quot;C148&quot;</value>
            <value>&quot;C2&quot;</value>
            <value>&quot;C22 C26&quot;</value>
            <value>&quot;C23 C25 C27&quot;</value>
            <value>&quot;C30&quot;</value>
            <value>&quot;C32&quot;</value>
            <value>&quot;C45&quot;</value>
            <value>&quot;C46&quot;</value>
            <value>&quot;C47&quot;</value>
            <value>&quot;C49&quot;</value>
            <value>&quot;C50&quot;</value>
            <value>&quot;C52&quot;</value>
            <value>&quot;C54&quot;</value>
            <value>&quot;C62 C64&quot;</value>
            <value>&quot;C65&quot;</value>
            <value>&quot;C68&quot;</value>
            <value>&quot;C7&quot;</value>
            <value>&quot;C70&quot;</value>
            <value>&quot;C78&quot;</value>
            <value>&quot;C82&quot;</value>
            <value>&quot;C83&quot;</value>
            <value>&quot;C85&quot;</value>
            <value>&quot;C86&quot;</value>
            <value>&quot;C87&quot;</value>
            <value>&quot;C90&quot;</value>
            <value>&quot;C91&quot;</value>
            <value>&quot;C92&quot;</value>
            <value>&quot;C93&quot;</value>
            <value>&quot;C95&quot;</value>
            <value>&quot;C99&quot;</value>
            <value>&quot;D&quot;</value>
            <value>&quot;D10 D12&quot;</value>
            <value>&quot;D11&quot;</value>
            <value>&quot;D15&quot;</value>
            <value>&quot;D17&quot;</value>
            <value>&quot;D19&quot;</value>
            <value>&quot;D20&quot;</value>
            <value>&quot;D21&quot;</value>
            <value>&quot;D26&quot;</value>
            <value>&quot;D28&quot;</value>
            <value>&quot;D30&quot;</value>
            <value>&quot;D33&quot;</value>
            <value>&quot;D35&quot;</value>
            <value>&quot;D36&quot;</value>
            <value>&quot;D37&quot;</value>
            <value>&quot;D45&quot;</value>
            <value>&quot;D46&quot;</value>
            <value>&quot;D47&quot;</value>
            <value>&quot;D48&quot;</value>
            <value>&quot;D49&quot;</value>
            <value>&quot;D50&quot;</value>
            <value>&quot;D56&quot;</value>
            <value>&quot;D6&quot;</value>
            <value>&quot;D7&quot;</value>
            <value>&quot;D9&quot;</value>
            <value>&quot;E10&quot;</value>
            <value>&quot;E101&quot;</value>
            <value>&quot;E12&quot;</value>
            <value>&quot;E121&quot;</value>
            <value>&quot;E17&quot;</value>
            <value>&quot;E24&quot;</value>
            <value>&quot;E25&quot;</value>
            <value>&quot;E31&quot;</value>
            <value>&quot;E33&quot;</value>
            <value>&quot;E34&quot;</value>
            <value>&quot;E36&quot;</value>
            <value>&quot;E38&quot;</value>
            <value>&quot;E40&quot;</value>
            <value>&quot;E44&quot;</value>
            <value>&quot;E46&quot;</value>
            <value>&quot;E49&quot;</value>
            <value>&quot;E50&quot;</value>
            <value>&quot;E58&quot;</value>
            <value>&quot;E63&quot;</value>
            <value>&quot;E67&quot;</value>
            <value>&quot;E68&quot;</value>
            <value>&quot;E77&quot;</value>
            <value>&quot;E8&quot;</value>
            <value>&quot;F E69&quot;</value>
            <value>&quot;F G63&quot;</value>
            <value>&quot;F G73&quot;</value>
            <value>&quot;F2&quot;</value>
            <value>&quot;F33&quot;</value>
            <value>&quot;F38&quot;</value>
            <value>&quot;F4&quot;</value>
            <value>&quot;G6&quot;</value>
            <value>&quot;T&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Cabin]' role='dimension' type='nominal' />
      <column caption='Sib+Parch' datatype='integer' name='[Calculation_447826716747632640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[SibSp]+[Parch]+1' />
      </column>
      <column aggregation='None' caption='Fare (bin)' datatype='integer' name='[Fare (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[Fare]' peg='0' size='10' />
      </column>
      <column datatype='string' name='[Fare (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Fare]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;4.0125, 5, 6.2375 and 68 more&quot;'>
            <value>4.0125000000000002</value>
            <value>5.0</value>
            <value>6.2374999999999998</value>
            <value>6.4375</value>
            <value>6.4500000000000002</value>
            <value>6.4958</value>
            <value>6.75</value>
            <value>6.8582999999999998</value>
            <value>6.9500000000000002</value>
            <value>6.9749999999999996</value>
            <value>7.0457999999999998</value>
            <value>7.0499999999999998</value>
            <value>7.0541999999999998</value>
            <value>7.125</value>
            <value>7.1417000000000002</value>
            <value>7.2249999999999996</value>
            <value>7.2291999999999996</value>
            <value>7.25</value>
            <value>7.3125</value>
            <value>7.4958</value>
            <value>7.5208000000000004</value>
            <value>7.5499999999999998</value>
            <value>7.6292</value>
            <value>7.6500000000000004</value>
            <value>7.7249999999999996</value>
            <value>7.7291999999999996</value>
            <value>7.7332999999999998</value>
            <value>7.7374999999999998</value>
            <value>7.7416999999999998</value>
            <value>7.75</value>
            <value>7.7750000000000004</value>
            <value>7.7874999999999996</value>
            <value>7.7957999999999998</value>
            <value>7.7999999999999998</value>
            <value>7.8292000000000002</value>
            <value>7.8541999999999996</value>
            <value>7.875</value>
            <value>7.8792</value>
            <value>7.8875000000000002</value>
            <value>7.8958000000000004</value>
            <value>7.9249999999999998</value>
            <value>8.0291999999999994</value>
            <value>8.0500000000000007</value>
            <value>8.1125000000000007</value>
            <value>8.1374999999999993</value>
            <value>8.1583000000000006</value>
            <value>8.3000000000000007</value>
            <value>8.3625000000000007</value>
            <value>8.4041999999999994</value>
            <value>8.4332999999999991</value>
            <value>8.4582999999999995</value>
            <value>8.5167000000000002</value>
            <value>8.6541999999999994</value>
            <value>8.6624999999999996</value>
            <value>8.6832999999999991</value>
            <value>8.7125000000000004</value>
            <value>8.8499999999999996</value>
            <value>9.0</value>
            <value>9.2166999999999994</value>
            <value>9.2249999999999996</value>
            <value>9.3499999999999996</value>
            <value>9.4749999999999996</value>
            <value>9.4832999999999998</value>
            <value>9.5</value>
            <value>9.5875000000000004</value>
            <value>9.8249999999999993</value>
            <value>9.8375000000000004</value>
            <value>9.8416999999999994</value>
            <value>9.8458000000000006</value>
            <value>10.1708</value>
            <value>10.4625</value>
          </bin>
        </calculation>
      </column>
      <column datatype='real' name='[Fare]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Passenger Id' datatype='integer' name='[PassengerId]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Sib+Parch (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_447826716747632640]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;2, 3, 4 and 5 more&quot;'>
            <value>2</value>
            <value>3</value>
            <value>4</value>
            <value>5</value>
            <value>6</value>
            <value>7</value>
            <value>8</value>
            <value>11</value>
          </bin>
        </calculation>
      </column>
      <column caption='Sib Sp' datatype='integer' name='[SibSp]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter from='4' function='range' level='[Fare (bin)]' to='51' />
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.507184' group-percentage='0.0977011' measure-ordering='alphabetic' measure-percentage='0.395115' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Age Bin'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Age]' peg='0' size='16' />
            </column>
            <column datatype='real' name='[Age]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Age (bin):ok] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{916A9A2E-FE22-4C6A-B526-AD0C523C82D1}' />
    </worksheet>
    <worksheet name='Alone and not alone'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column caption='Sib+Parch' datatype='integer' name='[Calculation_447826716747632640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[SibSp]+[Parch]+1' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Parch]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sib+Parch (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_447826716747632640]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;2, 3, 4 and 5 more&quot;'>
                  <value>2</value>
                  <value>3</value>
                  <value>4</value>
                  <value>5</value>
                  <value>6</value>
                  <value>7</value>
                  <value>8</value>
                  <value>11</value>
                </bin>
              </calculation>
            </column>
            <column caption='Sib Sp' datatype='integer' name='[SibSp]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parch]' derivation='Sum' name='[sum:Parch:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
              <lod column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Parch:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[Sib+Parch (group)] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{88887D12-22D8-4421-8F3D-DE6E91C64FF5}' />
    </worksheet>
    <worksheet name='Embarked'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column datatype='string' name='[Embarked]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Embarked]' derivation='None' name='[none:Embarked:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Embarked:nk] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{31A151C5-A6FA-44BE-B232-DDF11B5A61AF}' />
    </worksheet>
    <worksheet name='Family or Alone'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column caption='Sib+Parch' datatype='integer' name='[Calculation_447826716747632640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[SibSp]+[Parch]+1' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Parch]' role='measure' type='quantitative' />
            <column caption='Sib Sp' datatype='integer' name='[SibSp]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_447826716747632640]' derivation='None' name='[none:Calculation_447826716747632640:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Parch]' derivation='Sum' name='[sum:Parch:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
              <lod column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Parch:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Calculation_447826716747632640:ok] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{D0B66867-B0BB-4433-B703-6704B9DE0A4B}' />
    </worksheet>
    <worksheet name='Fare Bin'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column aggregation='None' caption='Fare (bin)' datatype='integer' name='[Fare (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[Fare]' peg='0' size='10' />
            </column>
            <column datatype='real' name='[Fare]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Fare (bin)]' derivation='None' name='[none:Fare (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' value='35' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Fare (bin):ok] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{135C6D8E-52C9-4F15-8F9D-31FB7E553466}' />
    </worksheet>
    <worksheet name='Has Cabin(Grouped)'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column datatype='string' name='[Cabin (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Cabin]' default='&quot;No Cabin &quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Has Cabin&quot;'>
                  <value>&quot;A10&quot;</value>
                  <value>&quot;A14&quot;</value>
                  <value>&quot;A16&quot;</value>
                  <value>&quot;A19&quot;</value>
                  <value>&quot;A20&quot;</value>
                  <value>&quot;A23&quot;</value>
                  <value>&quot;A24&quot;</value>
                  <value>&quot;A26&quot;</value>
                  <value>&quot;A31&quot;</value>
                  <value>&quot;A32&quot;</value>
                  <value>&quot;A34&quot;</value>
                  <value>&quot;A36&quot;</value>
                  <value>&quot;A6&quot;</value>
                  <value>&quot;A7&quot;</value>
                  <value>&quot;B101&quot;</value>
                  <value>&quot;B102&quot;</value>
                  <value>&quot;B18&quot;</value>
                  <value>&quot;B19&quot;</value>
                  <value>&quot;B20&quot;</value>
                  <value>&quot;B22&quot;</value>
                  <value>&quot;B28&quot;</value>
                  <value>&quot;B3&quot;</value>
                  <value>&quot;B30&quot;</value>
                  <value>&quot;B35&quot;</value>
                  <value>&quot;B37&quot;</value>
                  <value>&quot;B38&quot;</value>
                  <value>&quot;B39&quot;</value>
                  <value>&quot;B4&quot;</value>
                  <value>&quot;B41&quot;</value>
                  <value>&quot;B42&quot;</value>
                  <value>&quot;B49&quot;</value>
                  <value>&quot;B5&quot;</value>
                  <value>&quot;B50&quot;</value>
                  <value>&quot;B51 B53 B55&quot;</value>
                  <value>&quot;B57 B59 B63 B66&quot;</value>
                  <value>&quot;B58 B60&quot;</value>
                  <value>&quot;B69&quot;</value>
                  <value>&quot;B71&quot;</value>
                  <value>&quot;B73&quot;</value>
                  <value>&quot;B77&quot;</value>
                  <value>&quot;B78&quot;</value>
                  <value>&quot;B79&quot;</value>
                  <value>&quot;B80&quot;</value>
                  <value>&quot;B82 B84&quot;</value>
                  <value>&quot;B86&quot;</value>
                  <value>&quot;B94&quot;</value>
                  <value>&quot;B96 B98&quot;</value>
                  <value>&quot;C101&quot;</value>
                  <value>&quot;C103&quot;</value>
                  <value>&quot;C104&quot;</value>
                  <value>&quot;C106&quot;</value>
                  <value>&quot;C110&quot;</value>
                  <value>&quot;C111&quot;</value>
                  <value>&quot;C118&quot;</value>
                  <value>&quot;C123&quot;</value>
                  <value>&quot;C124&quot;</value>
                  <value>&quot;C125&quot;</value>
                  <value>&quot;C126&quot;</value>
                  <value>&quot;C128&quot;</value>
                  <value>&quot;C148&quot;</value>
                  <value>&quot;C2&quot;</value>
                  <value>&quot;C22 C26&quot;</value>
                  <value>&quot;C23 C25 C27&quot;</value>
                  <value>&quot;C30&quot;</value>
                  <value>&quot;C32&quot;</value>
                  <value>&quot;C45&quot;</value>
                  <value>&quot;C46&quot;</value>
                  <value>&quot;C47&quot;</value>
                  <value>&quot;C49&quot;</value>
                  <value>&quot;C50&quot;</value>
                  <value>&quot;C52&quot;</value>
                  <value>&quot;C54&quot;</value>
                  <value>&quot;C62 C64&quot;</value>
                  <value>&quot;C65&quot;</value>
                  <value>&quot;C68&quot;</value>
                  <value>&quot;C7&quot;</value>
                  <value>&quot;C70&quot;</value>
                  <value>&quot;C78&quot;</value>
                  <value>&quot;C82&quot;</value>
                  <value>&quot;C83&quot;</value>
                  <value>&quot;C85&quot;</value>
                  <value>&quot;C86&quot;</value>
                  <value>&quot;C87&quot;</value>
                  <value>&quot;C90&quot;</value>
                  <value>&quot;C91&quot;</value>
                  <value>&quot;C92&quot;</value>
                  <value>&quot;C93&quot;</value>
                  <value>&quot;C95&quot;</value>
                  <value>&quot;C99&quot;</value>
                  <value>&quot;D&quot;</value>
                  <value>&quot;D10 D12&quot;</value>
                  <value>&quot;D11&quot;</value>
                  <value>&quot;D15&quot;</value>
                  <value>&quot;D17&quot;</value>
                  <value>&quot;D19&quot;</value>
                  <value>&quot;D20&quot;</value>
                  <value>&quot;D21&quot;</value>
                  <value>&quot;D26&quot;</value>
                  <value>&quot;D28&quot;</value>
                  <value>&quot;D30&quot;</value>
                  <value>&quot;D33&quot;</value>
                  <value>&quot;D35&quot;</value>
                  <value>&quot;D36&quot;</value>
                  <value>&quot;D37&quot;</value>
                  <value>&quot;D45&quot;</value>
                  <value>&quot;D46&quot;</value>
                  <value>&quot;D47&quot;</value>
                  <value>&quot;D48&quot;</value>
                  <value>&quot;D49&quot;</value>
                  <value>&quot;D50&quot;</value>
                  <value>&quot;D56&quot;</value>
                  <value>&quot;D6&quot;</value>
                  <value>&quot;D7&quot;</value>
                  <value>&quot;D9&quot;</value>
                  <value>&quot;E10&quot;</value>
                  <value>&quot;E101&quot;</value>
                  <value>&quot;E12&quot;</value>
                  <value>&quot;E121&quot;</value>
                  <value>&quot;E17&quot;</value>
                  <value>&quot;E24&quot;</value>
                  <value>&quot;E25&quot;</value>
                  <value>&quot;E31&quot;</value>
                  <value>&quot;E33&quot;</value>
                  <value>&quot;E34&quot;</value>
                  <value>&quot;E36&quot;</value>
                  <value>&quot;E38&quot;</value>
                  <value>&quot;E40&quot;</value>
                  <value>&quot;E44&quot;</value>
                  <value>&quot;E46&quot;</value>
                  <value>&quot;E49&quot;</value>
                  <value>&quot;E50&quot;</value>
                  <value>&quot;E58&quot;</value>
                  <value>&quot;E63&quot;</value>
                  <value>&quot;E67&quot;</value>
                  <value>&quot;E68&quot;</value>
                  <value>&quot;E77&quot;</value>
                  <value>&quot;E8&quot;</value>
                  <value>&quot;F E69&quot;</value>
                  <value>&quot;F G63&quot;</value>
                  <value>&quot;F G73&quot;</value>
                  <value>&quot;F2&quot;</value>
                  <value>&quot;F33&quot;</value>
                  <value>&quot;F38&quot;</value>
                  <value>&quot;F4&quot;</value>
                  <value>&quot;G6&quot;</value>
                  <value>&quot;T&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Cabin]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[Cabin (group)] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{419F7464-BA7C-45DC-B119-E14BCA8247DF}' />
    </worksheet>
    <worksheet name='P class'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Pclass]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Pclass]' derivation='None' name='[none:Pclass:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Pclass:ok] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{75CAAB39-3554-4961-9087-2DDA92B2DE54}' />
    </worksheet>
    <worksheet name='SEX'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Sex]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Sex]' derivation='None' name='[none:Sex:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Sex:nk] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{FEF584B3-8A9D-4140-83A3-9C06EEAAE2CB}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='train' name='federated.1gjitae186ocq41cp1cda1ptwu3o' />
          </datasources>
          <datasource-dependencies datasource='federated.1gjitae186ocq41cp1cda1ptwu3o'>
            <column datatype='real' name='[Fare]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='integer' name='[Survived]' role='measure' type='quantitative' />
            <column-instance column='[Fare]' derivation='None' name='[none:Fare:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Survived]' derivation='Sum' name='[sum:Survived:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gjitae186ocq41cp1cda1ptwu3o].[sum:Survived:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Multiple Values]</rows>
        <cols>([federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Fare:ok] / [federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{CEA6B915-977B-407E-8240-B3D31E1C5D7F}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='P class'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F8275F77-5228-4737-A22F-93BB87D9D9F9}' />
    </window>
    <window class='worksheet' name='SEX'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E07B662E-9EE9-4F1B-9BC7-53FA802981BE}' />
    </window>
    <window class='worksheet' name='Has Cabin(Grouped)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Cabin (group)]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Have Cabin&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</field>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Cabin (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EA394CE-E7F7-4925-92BF-9496D7250CED}' />
    </window>
    <window class='worksheet' name='Family or Alone'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D62584EF-65FD-4C7C-AC50-D3EBBA5EF94D}' />
    </window>
    <window class='worksheet' name='Alone and not alone'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F7C036DD-788B-4741-AECD-48AC348283E1}' />
    </window>
    <window class='worksheet' name='Embarked'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2999F191-55AC-44F8-B885-4D95732A6B95}' />
    </window>
    <window class='worksheet' name='Age Bin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</field>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Age (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1153935-B03D-47B5-83D4-5EA31F4AB713}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</field>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[Fare (group)]</field>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[io:Set 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D66EF23-83E7-4183-80E2-09EE29241C38}' />
    </window>
    <window class='worksheet' name='Fare Bin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[:Measure Names]</field>
            <field>[federated.1gjitae186ocq41cp1cda1ptwu3o].[none:Fare (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E065FEB-D604-42CC-868D-24237EC0C535}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Bin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Alone and not alone' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Embarked' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Family or Alone' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Fare Bin' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Has Cabin(Grouped)' width='192'>
      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
      QAHpusBDkQAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='P class' width='192'>
      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
      yJhJ8WJuGYtMc+Bkp2PrK1uYz5PrKh1b3x9KAiDuy2Qsya9OdDi2vvXLS9MSAPd87SLEfZAA
      CE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhPkwAIT5MACE+TAAhP
      kwAIT5MACE9zfEaYbVtYNqiqgm1ZWJYNioJPVQEby7JRVBXVRdUSxNzlaABs26Sj9TAXhsK8
      9MwmTn78a/RQGDUUZuv6Gn7b2sTQjI0SXMjOrWvwqxICkV6OHgJFh3uI+hdREg4BNnHTprys
      nNrHluNTYkSsBTy1+ykW+aeZTBpOblqI++LcCGAlaP9qhLXrlnPqTA+gsK5+PdPJFOc/P8na
      bSvQtAIA8rQgSW6WRJTSiHPHrZKGAIbDfbMsKy3lER0LQCo2zmR0kuYTzVztHafk0XIqixaz
      wK8yPThI3Aii64PY9lIm9ASPKDdLIt760zTNVYWx/H4/mqa5qjCW3++f7Y/f4VKGqqqm5bNy
      LABafinf+U4ppCLkXeynqjSH1mPHiVkWdtZ8dubNR8/r5OPDH5O7YCkFQffUzBRzl/N1gbR8
      Nm5YBcDm3X92x1PVa7dS7fgGhbh/ch1AeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHia
      BEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaBEB4mgRAeJoEQHiaw5PibXrb
      PuPCjRye2V1Pz+UWvroRIWd+BVvqV9B96SRXh6PkLljKlvrlSGE4kW6OjgAzk9fpj/rJD6rY
      9gx9EyqNTzWSb4wzHptgMKrR+FQj2ckRppLuKhol5ibnRgDboL29i5o1qzh/rheIEdAWoCgK
      84JZxK0pAoGby4WBENO2Rb5UhptTpDLcPaQi1+kdGmey+XOu9o6zqHI+KWMKgFgqyTwlh1Rq
      AIBoKkkJUhlurpHKcPegFZTzF8+Xgz6B/1QP1YvLSV27wuGjRyBQSHXufIbVSxw+egQluICV
      Qedrcgnxx3oAleHCbG+oQ1EUVm9+kpWmhar6UFWF2i1PYt62LES6OR8ARfnmxy8UFb9fve2p
      O5eFSDfZG4WnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJAISnSQCEp0kAhKdJ
      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
      VgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='SEX' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
